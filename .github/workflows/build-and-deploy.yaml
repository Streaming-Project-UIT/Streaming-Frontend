# name: Deploy to GKE Autopilot

# on:
#   push:
#     branches:
#       - dev

# env:
#   PROJECT_ID: devops-project-419807
#   CLUSTER_NAME: autopilot-cluster-1
#   ZONE: asia-east1
  

# jobs:
#   deploy:
#     name: Deploy to GKE Autopilot
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Build the application
#         run: |
#           npm install
#           npm run build 

#       - name: Configure gcloud
#         uses: google-github-actions/setup-gcloud@v2
#         with:
#           service_account_key: ${{ secrets.GCP_SA_KEY }}
#           project_id: ${{ env.PROJECT_ID }}
#           install_components: 'gke-gcloud-auth-plugin'
#           export_default_credentials: true

#       - name: Build and Push the Docker image
#         env:
#           GOOGLE_PROJECT: ${{ env.PROJECT_ID }}
#         run: |
#           gcloud auth configure-docker asia-east1-docker.pkg.dev
#           docker build -t asia-east1-docker.pkg.dev/$GOOGLE_PROJECT/frontend/react_app:1.0 .
#           docker push asia-east1-docker.pkg.dev/$GOOGLE_PROJECT/frontend/react_app:1.0

#       - name: Set cluster context 
#         run: |
#           gcloud container clusters get-credentials ${{ env.CLUSTER_NAME }} --zone ${{ env.ZONE }} --project ${{ env.PROJECT_ID }}

#       - name: Apply Kubernetes manifests
#         run: |
#           kubectl apply -f resources.yaml





---
name: Build and Push Python Image to Google Cloud Platform
on:
  push:
    branches: [ dev ]
# env:
#   PROJECT_ID: devops-project-419807
#   CLUSTER_NAME: autopilot-cluster-1
#   ZONE: asia-east1
  
jobs:
  build-push-gcr:
    name: Build and Push to GCP
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: reactapp
      PROJECT_ID: devops-project-419807
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - uses: google-github-actions/setup-gcloud@v2
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ env.PROJECT_ID }}
        export_default_credentials: true

    - name: Build Docker Image
      run: docker build -t $IMAGE_NAME:latest .

    - name: Automatic Tagging of Releases
      id: increment-git-tag
      run: |
        bash ./scripts/git_update.sh -v major

    - name: Configure Docker Client
      run: |-
        gcloud auth configure-docker --quiet
        gcloud auth configure-docker us-west2-docker.pkg.dev --quiet

    - name: Push Docker Image to Container Registry (GCR)
      env:
        GIT_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
      run: |-
        docker tag $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
        docker tag $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:$GIT_TAG
        docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
        docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:$GIT_TAG

    - name: Push Docker Image to Artifact Registry
      env:
        GIT_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
      run: |-
        docker tag $IMAGE_NAME:latest us-west2-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:latest
        docker tag $IMAGE_NAME:latest us-west2-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:$GIT_TAG
        docker push us-west2-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:latest
        docker push us-west2-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:$GIT_TAG

    - name: Set cluster context 
      run: |
        gcloud container clusters get-credentials ${{ env.CLUSTER_NAME }} --zone ${{ env.ZONE }} --project ${{ env.PROJECT_ID }}

    - name: Apply Kubernetes manifests
      run: |
        kubectl apply -f resources.yaml